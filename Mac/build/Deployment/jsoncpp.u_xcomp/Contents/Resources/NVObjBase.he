/* NON-VISUAL OBJECT BASE (IMPLEMENTATION)
 * 
 * Base class for all Non-Visual objects based Omnis objects
 *
 * March 30, 2010 David McKeone (Created)
 */

#include <extcomp.he>
#include "jsoncpp.he"
#include "OmnisTools.he"

#ifndef NV_OBJ_BASE_HE_
#define NV_OBJ_BASE_HE_

// Class definition for C++ version of your object
class NVObjBase
{
private:
protected:
	qobjinst			mObjInst;
public:
	// Static tracking variable
	static qshort objResourceId;  // This static variable needs to be in all inherited objects
	
	// Constructor / Destructor
	NVObjBase( qobjinst objinst);
	virtual ~NVObjBase();
	
	// Object Copying
	NVObjBase* dup( qlong propID, qobjinst objinst, tThreadData* );
	virtual void copy( NVObjBase* pObj );
	
	// Methods Available and Method Call Handling (These should be overriden by a sub-class)
	virtual qlong returnMethods( EXTCompInfo* pEci );
	virtual qlong methodCall( tThreadData* pThreadData );

	// Properties and Property Call Handling (These should be overriden by a sub-class)
	virtual qlong returnProperties( EXTCompInfo* pEci );
	virtual qlong getProperty( EXTCompInfo* pEci );
	virtual qlong setProperty( EXTCompInfo* pEci );
	virtual qlong canAssignProperty( EXTCompInfo* pEci, qlong propID );
};


#endif /* NV_OBJ_BASE_HE_ */
